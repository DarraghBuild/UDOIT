name: Run Python Tests and Build Image

on:
  push:
    branches:
      - issue/815-docker-nginx

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2


      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}


      - name: Shea - Build Image
        run: |
          cp .env.local.example .env.local
          docker-compose -f docker-compose.nginx.yml build
          docker-compose -f docker-compose.nginx.yml run composer composer install --no-dev --no-interaction --no-progress --optimize-autoloader
          docker-compose -f docker-compose.nginx.yml run yarn bash -c 'cd /app && yarn install && yarn build'        
          docker build . -t udoit:latest -f nginx_build/Dockerfile.build
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest


      # - name: Build and push Docker image
      #   uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     build-args: REQUIREMENTS=${{ env.REQUIREMENTS }}
