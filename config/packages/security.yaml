security:
    encoders:
        Symfony\Component\Security\Core\User\UserInterface: sha512
    providers:
        users:
            entity:
                class: 'App\Entity\User'
                property: 'username'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        ltiAuthorize:
            pattern: ^/lti/authorize
            stateless: false
            anonymous: true
            guard:
                authenticators:
                    - App\Security\DevAuthenticator
        ltiResponse:
            pattern: ^/lti/authorize/check
            stateless: false
            anonymous: true
            guard:
                authenticators:
                    - App\Security\DevAuthenticator

        oauthAuthorize:
            pattern: ^/authorize
            anonymous: true
            guard:
                authenticators: 
                    - App\Security\OauthAuthenticator
                entry_point: App\Security\OauthAuthenticator

        oauthResponse: 
            pattern: ^/authorize/check
            anonymous: true
            stateless: false

        dashboard:
            pattern: ^/dashboard
            provider: users
            guard:  
                authenticators:
                    - App\Security\SessionAuthenticator
                    - App\Security\TokenAuthenticator
                entry_point: App\Security\TokenAuthenticator
        
        api:
           pattern: ^/api
           provider: users
           guard:
                authenticators:
                    - App\Security\SessionAuthenticator
                    - App\Security\TokenAuthenticator
                entry_point: App\Security\TokenAuthenticator

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/lti/authorize, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/lti/authorize/check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
